{
  "address": "0x8d5Ad3C14AFf68cf121aEB316232771443834A84",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_svgType",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getSvg",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_svg",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_svgType",
          "type": "bytes32"
        }
      ],
      "name": "storeSvg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x00c675c23ebf9de9b11658a51715ecd725c6ee570335cf5934486a6336ecaf4c",
  "receipt": {
    "to": null,
    "from": "0xb19BC46C52A1352A071fe2389503B6FE1ABD50Ff",
    "contractAddress": "0x8d5Ad3C14AFf68cf121aEB316232771443834A84",
    "transactionIndex": 21,
    "gasUsed": "492593",
    "logsBloom": "0x
    "blockHash": "0x70130c561a4496daf413a2d7ad7959690accce97183bfb1aaff5b04e641717f8",
    "transactionHash": "0x00c675c23ebf9de9b11658a51715ecd725c6ee570335cf5934486a6336ecaf4c",
    "logs": [
      {
        "transactionIndex": 21,
        "blockNumber": 10199391,
        "transactionHash": "0x00c675c23ebf9de9b11658a51715ecd725c6ee570335cf5934486a6336ecaf4c",
        "address": "0x8d5Ad3C14AFf68cf121aEB316232771443834A84",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b19bc46c52a1352a071fe2389503b6fe1abd50ff"
        ],
        "data": "0x",
        "logIndex": 22,
        "blockHash": "0x70130c561a4496daf413a2d7ad7959690accce97183bfb1aaff5b04e641717f8"
      }
    ],
    "blockNumber": 10199391,
    "cumulativeGasUsed": "5620801",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "60383510c8574857e1f67441cf4292bd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_svgType\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getSvg\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_svg\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_svgType\",\"type\":\"bytes32\"}],\"name\":\"storeSvg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Svgs/Svgs.sol\":\"Svgs\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"src/Svgs/Svgs.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Svgs is Ownable {\\n    mapping(bytes32 => uint256) private ids;\\n    mapping(bytes32 => mapping(uint256 => string)) private svgs;\\n\\n    function storeSvg(string calldata _svg, bytes32 _svgType) external onlyOwner {\\n        svgs[_svgType][ids[_svgType]] = _svg;\\n        ids[_svgType]++;\\n    }\\n\\n    function getSvg(bytes32 _svgType, uint256 _id) public view returns (string memory) {\\n        return svgs[_svgType][_id];\\n    }\\n}\\n\",\"keccak256\":\"0x5b1c6dc02874d14366fdc3df29af6df4b041b3cb7312d819f414cde18a0e013b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61078a8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b14610089578063f2fde38b146100b6578063f300633d146100c957600080fd5b80631991913e1461006c578063715018a614610081575b600080fd5b61007f61007a366004610556565b6100e9565b005b61007f6101bf565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61007f6100c43660046105ce565b61024c565b6100dc6100d736600461060b565b61037c565b6040516100ad919061062d565b60005473ffffffffffffffffffffffffffffffffffffffff16331461016f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600081815260026020908152604080832060018352818420548452909152902061019a90848461049f565b5060008181526001602052604081208054916101b5836106a0565b9190505550505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610240576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610166565b61024a600061042a565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610166565b73ffffffffffffffffffffffffffffffffffffffff8116610370576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610166565b6103798161042a565b50565b600082815260026020908152604080832084845290915290208054606091906103a490610700565b80601f01602080910402602001604051908101604052809291908181526020018280546103d090610700565b801561041d5780601f106103f25761010080835404028352916020019161041d565b820191906000526020600020905b81548152906001019060200180831161040057829003601f168201915b5050505050905092915050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546104ab90610700565b90600052602060002090601f0160209004810192826104cd5760008555610531565b82601f10610504578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00823516178555610531565b82800160010185558215610531579182015b82811115610531578235825591602001919060010190610516565b5061053d929150610541565b5090565b5b8082111561053d5760008155600101610542565b60008060006040848603121561056b57600080fd5b833567ffffffffffffffff8082111561058357600080fd5b818601915086601f83011261059757600080fd5b8135818111156105a657600080fd5b8760208285010111156105b857600080fd5b6020928301989097509590910135949350505050565b6000602082840312156105e057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461060457600080fd5b9392505050565b6000806040838503121561061e57600080fd5b50508035926020909101359150565b600060208083528351808285015260005b8181101561065a5785810183015185820160400152820161063e565b8181111561066c576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156106f9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600181811c9082168061071457607f821691505b6020821081141561074e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea26469706673582212208bf495c3a356d0e9d01af6b0e4761c1ab8476693d2b89c8b5d1d4e091899276b64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b14610089578063f2fde38b146100b6578063f300633d146100c957600080fd5b80631991913e1461006c578063715018a614610081575b600080fd5b61007f61007a366004610556565b6100e9565b005b61007f6101bf565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61007f6100c43660046105ce565b61024c565b6100dc6100d736600461060b565b61037c565b6040516100ad919061062d565b60005473ffffffffffffffffffffffffffffffffffffffff16331461016f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600081815260026020908152604080832060018352818420548452909152902061019a90848461049f565b5060008181526001602052604081208054916101b5836106a0565b9190505550505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610240576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610166565b61024a600061042a565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610166565b73ffffffffffffffffffffffffffffffffffffffff8116610370576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610166565b6103798161042a565b50565b600082815260026020908152604080832084845290915290208054606091906103a490610700565b80601f01602080910402602001604051908101604052809291908181526020018280546103d090610700565b801561041d5780601f106103f25761010080835404028352916020019161041d565b820191906000526020600020905b81548152906001019060200180831161040057829003601f168201915b5050505050905092915050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546104ab90610700565b90600052602060002090601f0160209004810192826104cd5760008555610531565b82601f10610504578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00823516178555610531565b82800160010185558215610531579182015b82811115610531578235825591602001919060010190610516565b5061053d929150610541565b5090565b5b8082111561053d5760008155600101610542565b60008060006040848603121561056b57600080fd5b833567ffffffffffffffff8082111561058357600080fd5b818601915086601f83011261059757600080fd5b8135818111156105a657600080fd5b8760208285010111156105b857600080fd5b6020928301989097509590910135949350505050565b6000602082840312156105e057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461060457600080fd5b9392505050565b6000806040838503121561061e57600080fd5b50508035926020909101359150565b600060208083528351808285015260005b8181101561065a5785810183015185820160400152820161063e565b8181111561066c576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156106f9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600181811c9082168061071457607f821691505b6020821081141561074e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea26469706673582212208bf495c3a356d0e9d01af6b0e4761c1ab8476693d2b89c8b5d1d4e091899276b64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 392,
        "contract": "src/Svgs/Svgs.sol:Svgs",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2959,
        "contract": "src/Svgs/Svgs.sol:Svgs",
        "label": "ids",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 2965,
        "contract": "src/Svgs/Svgs.sol:Svgs",
        "label": "svgs",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(uint256 => string))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_string_storage)"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}