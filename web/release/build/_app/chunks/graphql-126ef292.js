var S=Object.defineProperty;var x=Object.getOwnPropertySymbols;var C=Object.prototype.hasOwnProperty,D=Object.prototype.propertyIsEnumerable;var E=(s,e,t)=>e in s?S(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,f=(s,e)=>{for(var t in e||(e={}))C.call(e,t)&&E(s,t,e[t]);if(x)for(var t of x(e))D.call(e,t)&&E(s,t,e[t]);return s};import{ac as N,ad as U,ae as k,af as B,ag as I,ah as O,ai as R,aj as H,C as Q,E as V}from"./vendor-c564b019.js";import{h as W}from"./config-189b06cb.js";const A={fetching:!1,stale:!1,error:void 0,data:void 0,extensions:void 0},T=N.concat();class _{constructor(e){e?this.client=new U({url:e,exchanges:T}):console.error("need an url for graphql queries")}mutate(e,t){return this.client.mutation(e,t==null?void 0:t.variables,t==null?void 0:t.context).toPromise()}query(e,t){return this.client.query(e,t==null?void 0:t.variables,t==null?void 0:t.context).toPromise()}async queryList(e,t){const o=t.path.split("."),i=100;let r="0x0",h=i,a=[];for(;h===i;){const u=await this.client.query(e,f({first:i,lastId:r},t==null?void 0:t.variables),t==null?void 0:t.context).toPromise();if(u.error)throw new Error(u.error.message);const d=u.data;let l=[];if(d&&t.path){let c=d;for(const y of o)c=c[y];l=c}if(h=l.length,h>0){const c=(t==null?void 0:t.getLastId)!==void 0?t==null?void 0:t.getLastId(a):l[h-1].id;if(r===c){console.log("same query, stop");break}r=c}a=a.concat(l)}return a}subscribeToQuery(e,t){const o=k(B([I({fetching:!0,stale:!1}),k(this.client.query(e,t==null?void 0:t.variables,t==null?void 0:t.context),O(({stale:i,data:r,error:h,extensions:a})=>({fetching:!1,stale:!!i,data:r,error:h,extensions:a}))),I({fetching:!1,stale:!1})]),R((i,r)=>f(f({},i),r),A));return{subscribe(i){return k(o,H(i)).unsubscribe}}}}const K=new _(W);function L(s,e){for(const t of Object.keys(e))s[t]&&typeof s[t]=="object"&&typeof e[t]=="object"?L(s[t],e[t]):s[t]=e[t]}class G{constructor(e){this.$store=e,this.store=Q(this.$store)}subscribe(e,t){return this.store.subscribe(e,t)}setPartial(e){this.$store||(this.$store={});for(const t of Object.keys(e))this.$store[t]=e[t];return this.store.set(this.$store),this.$store}set(e){if(this.$store||(this.$store={}),e||(this.$store=e),e!==this.$store){for(const t of Object.keys(this.$store))e[t]===void 0&&(this.$store[t]=void 0);for(const t of Object.keys(e))this.$store[t]=e[t]}return this.store.set(this.$store),this.$store}}class J extends G{constructor(e){super(e)}setData(e,t){return this.$store.data=this.$store.data||{},L(this.$store.data,e),t&&this.setPartial(t),this.store.set(this.$store),this.$store}}const b=V("graphql");class Y extends J{constructor(e,t,o){super({step:"IDLE"});this.endpoint=e,this.query=t,this.options=o,this.runtimeVariables={}}acknowledgeError(){this.setPartial({error:void 0})}async fetch(e){var a,u,d,l,c,y,q;b.info("fetching....");const t=typeof((u=(a=this.options)==null?void 0:a.variables)==null?void 0:u.first)=="number"?(l=(d=this.options)==null?void 0:d.variables)==null?void 0:l.first:1e3;let o=t,i="0x0",r,h;for(;o===t;)try{const $=f(f(f({first:t,lastId:i},(c=this.options)==null?void 0:c.variables),this.runtimeVariables),e),w=this.query.split("?");let P="";for(let n=0;n<w.length;n++){const p=w[n];p.startsWith("$")?$[p.substr(1)]||n++:P+=p}const m=await this.endpoint.query(P,{variables:$,context:{requestPolicy:"cache-and-network"}});if(!m.data)throw this.setPartial({error:"cannot fetch from thegraph node"}),new Error("cannot fetch from thegraph node");const v=((y=this.options)==null?void 0:y.path)?m.data[this.options.path]:m.data;if(r||(r=v),(q=this.options)==null?void 0:q.list){let n=v;if(typeof this.options.list!="boolean"&&this.options.list.path&&(n=v[this.options.list.path]),o=n.length,o>0){const p=typeof this.options.list!="boolean"&&this.options.list.getLastId!==void 0?this.options.list.getLastId(n):n[o-1].id;if(i===p){b.log("same query, stop");break}i=p}h?h.push(...n):h=n}else o=0}catch($){o=0,b.error($)}this.setPartial({data:r,step:"READY"})}}class M extends Y{constructor(e,t,o,i){super(e,t,i);this.listenerCount=0,this.hook=o}acknowledgeError(){this.setPartial({error:void 0})}subscribe(e,t){this.listenerCount++,this.listenerCount===1&&(b.info("start fetching"),this.stopUpdates=this.hook.subscribe(i=>this.fetch({blockNumber:i.lastBlockNumber})));const o=this.store.subscribe(e,t);return()=>{this.listenerCount--,this.listenerCount===0&&(b.info("stop fetching"),this.stopUpdates&&(this.stopUpdates(),this.stopUpdates=void 0)),o()}}}export{M as H,K as S};
//# sourceMappingURL=graphql-126ef292.js.map
