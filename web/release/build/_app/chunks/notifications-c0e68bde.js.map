{"version":3,"file":"notifications-c0e68bde.js","sources":["../../../../../src/lib/web/notifications.ts"],"sourcesContent":["import {writable} from 'svelte/store';\n\ntype Notification = {\n  id?: string;\n  delay: number;\n  onAcknowledge?: () => void;\n  title: string;\n  text: string;\n  type: 'error' | 'success' | 'info' | 'warning';\n};\n\ntype CurrentNotification = {\n  current?: Notification;\n};\n\nconst createStore = () => {\n  const recorded: Record<string, boolean> = {};\n  const pending: Notification[] = [];\n  const data: CurrentNotification = {\n    current: undefined,\n  };\n\n  let timeout: NodeJS.Timeout;\n\n  const {subscribe, set} = writable<CurrentNotification>(data);\n\n  function setCurrent(current: Notification | undefined) {\n    data.current = current;\n    set(data);\n    if (current && current.delay) {\n      if (current.onAcknowledge) {\n        current.onAcknowledge(); // TODO delay?\n      }\n      timeout = setTimeout(acknowledge, current.delay * 1000);\n    }\n  }\n\n  function acknowledge() {\n    const current = data.current;\n    if (current && !current.delay && current.onAcknowledge) {\n      current.onAcknowledge();\n    }\n    const next = pending.shift();\n    clearTimeout(timeout);\n    setCurrent(next);\n  }\n\n  function queue(notification: Notification) {\n    if (notification.id) {\n      if (recorded[notification.id]) {\n        return;\n      }\n      recorded[notification.id] = true;\n    }\n    if (pending.length > 0 || data.current) {\n      pending.push(notification);\n    } else {\n      setCurrent(notification);\n    }\n  }\n\n  return {\n    subscribe,\n    queue,\n    acknowledge,\n    clear: () => {\n      pending.splice(0, pending.length);\n      acknowledge();\n    },\n  };\n};\n\nexport const notifications = createStore();\n\n// USEFUL FOR DEBUGGING:\nif (typeof window !== 'undefined') {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  (window as any).notifications = notifications;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n"],"names":[],"mappings":"yCAeA,KAAM,GAAc,IAAM,MAClB,GAAoC,GACpC,EAA0B,GAC1B,EAA4B,CAChC,QAAS,WAGP,QAEE,CAAC,YAAW,OAAO,EAA8B,cAEnC,EAAmC,GAChD,QAAU,IACX,GACA,GAAW,EAAQ,OACjB,GAAQ,iBACF,kBAEA,WAAW,EAAa,EAAQ,MAAQ,kBAI/B,MACf,GAAU,EAAK,QACjB,GAAW,CAAC,EAAQ,OAAS,EAAQ,iBAC/B,qBAEJ,GAAO,EAAQ,qBACR,KACF,cAGE,EAA4B,IACrC,EAAa,GAAI,IACf,EAAS,EAAa,aAGjB,EAAa,IAAM,GAE1B,EAAQ,OAAS,GAAK,EAAK,UACrB,KAAK,KAEF,SAIR,CACL,YACA,QACA,cACA,MAAO,IAAM,GACH,OAAO,EAAG,EAAQ,eAMnB,EAAgB,IAG7B,AAAI,MAAO,SAAW,aAEnB,QAAe,cAAgB"}